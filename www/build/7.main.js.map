{"version":3,"sources":["../../src/pages/new-post/new-post.module.ts","../../src/pages/new-post/new-post.ts"],"names":[],"mappings":"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","file":"7.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { NewPostPage } from './new-post';\n\n@NgModule({\n  declarations: [\n    NewPostPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(NewPostPage),\n  ],\n  exports: [\n    NewPostPage\n  ]\n})\nexport class NewPostPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/new-post/new-post.module.ts","import { Component } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormControl } from \"@angular/forms\";\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\n\nimport { LatLng } from \"@ionic-native/google-maps\";\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer';\n\n/**\n * Generated class for the NewPostPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-new-post',\n  templateUrl: 'new-post.html',\n})\nexport class NewPostPage {\n\n  loggedInUserId    : number = this.navParams.get('loggedInUserId');\n  username          : string = this.navParams.get('username');\n  mediaType         : number = this.navParams.get('mediaType');\n  \n  mediaFilePath     : string = this.navParams.get('mediaFilePath');\n  postLat           : number = this.navParams.get('postLat');\n  postLng           : number = this.navParams.get('postLng');\n  postTitle         : string ;\n  postDesc          : string ;\n  postCategories    : any ;\n  fileKey           : string ;\n  fileName          : string ;\n  postingUrl        : string ;\n  \n\n  constructor(\n    public navCtrl        : NavController,\n    public navParams      : NavParams,\n    private transfer      : FileTransfer,\n    private formBuilder   : FormBuilder,\n    public toastCtrl      : ToastController \n  ) {\n      if(this.mediaType == 1) {\n        this.fileKey    = 'image'; \n        this.fileName   = 'image';\n        this.postingUrl = 'https://limitless-woodland-73873.herokuapp.com/images/postImages';\n      }\n      else {\n        this.fileKey     = 'video'; \n        this.fileName    = 'video';\n        this.postingUrl   = 'https://limitless-woodland-73873.herokuapp.com/videos/postVideos';\n        \n      }\n  }\n\n  ionViewDidLoad() {\n    \n    console.log('ionViewDidLoad NewPostPage');\n    console.log(this.mediaFilePath);    \n  }\n\n  postDetails : FormGroup = this.formBuilder.group({\n    postTitle : ['', [Validators.required, Validators.maxLength(100)]],\n    postDesc  : ['', Validators.required],\n    postCategories :['', Validators.required]\n  })\n\n  \n\n\n  upload() {\n\n    this.postTitle = this.postDetails.get('postTitle').value;\n    this.postDesc = this.postDetails.get('postDesc').value;\n    this.postCategories = this.postDetails.get('postCategories').value;\n    console.log(this.postCategories);\n    \n    const fileTransfer: FileTransferObject = this.transfer.create();\n    \n    let options: FileUploadOptions = {\n      fileKey   : this.fileKey,\n      fileName  : this.fileName,\n      mimeType  : \"multipart/form-data\",\n      params    : {\n        postTitle       : this.postTitle,\n        postDesc        : this.postDesc,\n        postCategories  : this.postCategories,\n        postLat         : this.postLat,\n        postLng         : this.postLng,\n        postMediaType   : this.mediaType,\n        userId          : this.loggedInUserId  \n      }\n\n    }\n\n    console.log('file upload options: ', options);\n    console.log(this.mediaFilePath);\n      \n    fileTransfer.upload(this.mediaFilePath, this.postingUrl, options)\n    .then((data) => {\n      console.log('image has been uploaded: ', data);\n      this.navCtrl.pop({}, () => {\n        let toast = this.toastCtrl.create({\n          message: 'Your post has been successfully uploaded !',\n          duration: 3000\n        })\n        toast.present();\n      })\n    }, (err) => {\n      console.log('image could not be uploaded: ', err);\n    })\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/new-post/new-post.ts"],"sourceRoot":""}